@page "/lz77Deflate"
@using System.Text
@using Compression
@using LZAlgorithms
@rendermode InteractiveServer
@attribute [StreamRendering]

<PageTitle>LZ77</PageTitle>

<div class="container-fluid my-1">
    <div class="card">
        <div class="card-body">
            <h3 class="card-header">LZ77 Deflate</h3>
            <hr />
            <p>LZ77 ile HuffmanBasic'ın kombinasyonundan oluşur </p>
        </div>
    </div>
</div>

<div class="container-fluid my-2">
    <div class="card">
        <div class="card-body">
            <h3 class="card-header">LZ77</h3>
            <hr />
            <div class="border-2">
                <label>Sıkıştırılacak metni giriniz: </label>
                <input type="text" class="form-control" @bind="text" />

                <button class="btn btn-primary my-1" @onclick="TextInput">Sıkıştır</button>
            </div>

            <p class="text-muted">Orjinal Veri uzunluğu: @(text.Length) karakter ve @(text.Length * sizeof(char)) byte </p>
            <hr />
            <p class="text-muted">LZ77 Tupple uzunluğu: @(lz77Tuples.Count * sizeof(char)) byte </p>
            <hr />
            <p class="text-muted">LZ77 + Huffman ile sıkıştırılmış veri uzunluğu: @(compressed.Item1.Count) byte</p>

        </div>
    </div>
</div>

@code {
    private string text = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,";

    List<LZ77.TupleString> lz77Tuples = new List<LZ77.TupleString>();
    (List<byte>, int totalBits) compressed = new (new List<byte>(), 0);

    public async Task TextInput()
    {
        var lz77 = new LZ77();
        lz77Tuples = lz77.Compress(text, 32, 8);
        var lz77binaryString = lz77.ConvertToBinaryString(lz77Tuples);
        var huffman = new Huffman();
        compressed = await huffman.Compress(lz77binaryString,3);
        var a = 3;
    }

    private void DecompressText()
    {
        
    }
}
