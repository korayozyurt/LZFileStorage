@page "/lz78"
@using LZAlgorithms
@rendermode InteractiveServer
@attribute [StreamRendering]

<PageTitle>LZ78</PageTitle>

<div class="container-fluid my-1">
    <div class="card">
        <div class="card-body">
            <h3 class="card-header">LZ78</h3>
            <hr />
            <p>LZ78, Lempel-Ziv 1978 yılnda bulunmuştur.</p>
            <p>kullanılan yöntemde, her Lz78Tuple nesnesi 1 integer ve 1 char karakter döndürmekte. integer 4 byte, char 2 byte olmak üzere listenin her elemanı 6 byte yer kaplamaktadır.</p>
        </div>
    </div>
</div>

<div class="container-fluid my-2">
    <div class="card">
        <div class="card-body">
            <h3 class="card-header">LZ78</h3>
            <hr />
            <div class="border-2">
                <label>Sıkıştırılacak metni giriniz: </label>
                <input type="text" class="form-control" @bind="text" @bind:after="TextInput" />
            </div>

            <p class="text-muted">Sıkıştırılmış Veri</p>
            <ul class="list-group">
                @foreach (var t in lz78Tuple)
                {
                    <li class="list-group-item">@t.ToString()</li>
                }
            </ul>

            @if (lz78Tuple.Any())
            {
                <p>Sıkıştırılmış Veri Toplamda @(lz78Tuple.Count * 6) bayt yer kaplamaktadır</p>
                <p>Asıl veri ise: @(text.Length * sizeof(char))</p>
            }


            <hr />
            <p class="text-muted">Decompressed veri:</p>
            @decompressedText

        </div>
    </div>
</div>

@code {

    private string text = string.Empty;
    List<LZ78.TupleChar> lz78Tuple = new List<LZ78.TupleChar>();

    private string decompressedText = String.Empty;

    public async Task TextInput()
    {
        var compresser = new LZ78();
        lz78Tuple = compresser.Compress(text);
        DecompressText();
    }

    private void DecompressText()
    {
        var compresser = new LZ78();
        decompressedText = compresser.Decompress(lz78Tuple).Replace("\0", string.Empty);
    }
}
