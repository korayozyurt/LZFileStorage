@page "/lz77"
@using LZAlgorithms
@rendermode InteractiveServer

<PageTitle>LZ77</PageTitle>

<div class="container-fluid my-1">
    <div class="card">
        <div class="card-body">
            <h3 class="card-header">LZ77</h3>
            <hr />
            <p>LZ77, Lempel-Ziv 1977 anlamına gelir</p>
            <p>kullanılan yöntemde, her Lz77Tuple nesnesi iki integer ve 1 char karakter döndürmekte. integer 4 byte, char 2 bayt olmak üzere listenin her elemanı 10 bayt yer kaplamaktadır.</p>
            
            <p>
                64 bit sistemlerde ise string nesneler 
            </p>
        </div>
    </div>
</div>

<div class="container-fluid my-2">
    <div class="card">
        <div class="card-body">
            <h3 class="card-header">LZ77</h3>
            <hr />
            <div class="border-2">
                <label>Sıkıştırılacak metni giriniz: </label>
                <input type="text" class="form-control" @bind="text" @bind:after="TextInput"/>
            </div>
            
            <p class="text-muted">Sıkıştırılmış Veri</p>
            <ul class="list-group">
                @foreach (var t in lz77Tuple)
                {
                    <li class="list-group-item">@t.ToString()</li>
                }
            </ul>
            
            @if (lz77Tuple.Any())
            { 
                <p>Sıkıştırılmış Veri Toplamda @(lz77Tuple.Count * 10) bayt yer kaplamaktadır</p>
                <p>Asıl veri ise: @(text.Length * sizeof(char))</p>
            }
           
            
            <hr />
            <p class="text-muted">Decompressed veri:</p>
            @decompressedText
            
        </div>
    </div>
</div>

@code {

    private string text = string.Empty;
    List<LZ77.TupleString> lz77Tuple = new List<LZ77.TupleString>();

    private string decompressedText = String.Empty;

    public async Task TextInput()
    {
        var compresser = new LZ77();
        lz77Tuple =  compresser.Compress(text,8,4);
        DecompressText();
    }

    private void DecompressText()
    {
        var compresser = new LZ77();
        decompressedText = compresser.Decompress(lz77Tuple).Replace("\0", string.Empty);
    }
}
